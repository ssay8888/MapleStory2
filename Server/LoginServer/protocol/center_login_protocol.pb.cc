// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: center_login_protocol.proto

#include "center_login_protocol.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace Protocol {
constexpr CenterLoginClientInit::CenterLoginClientInit(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : authenticationkey_(int64_t{0}){}
struct CenterLoginClientInitDefaultTypeInternal {
  constexpr CenterLoginClientInitDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CenterLoginClientInitDefaultTypeInternal() {}
  union {
    CenterLoginClientInit _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CenterLoginClientInitDefaultTypeInternal _CenterLoginClientInit_default_instance_;
constexpr CenterLoginServerInit::CenterLoginServerInit(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct CenterLoginServerInitDefaultTypeInternal {
  constexpr CenterLoginServerInitDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CenterLoginServerInitDefaultTypeInternal() {}
  union {
    CenterLoginServerInit _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CenterLoginServerInitDefaultTypeInternal _CenterLoginServerInit_default_instance_;
constexpr CenterLoginClientCreateAuth::CenterLoginClientCreateAuth(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct CenterLoginClientCreateAuthDefaultTypeInternal {
  constexpr CenterLoginClientCreateAuthDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CenterLoginClientCreateAuthDefaultTypeInternal() {}
  union {
    CenterLoginClientCreateAuth _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CenterLoginClientCreateAuthDefaultTypeInternal _CenterLoginClientCreateAuth_default_instance_;
constexpr CenterLoginServerCreateAuth::CenterLoginServerCreateAuth(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : auth_(int64_t{0})
  , accountid_(int64_t{0})
  , characterid_(int64_t{0}){}
struct CenterLoginServerCreateAuthDefaultTypeInternal {
  constexpr CenterLoginServerCreateAuthDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CenterLoginServerCreateAuthDefaultTypeInternal() {}
  union {
    CenterLoginServerCreateAuth _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CenterLoginServerCreateAuthDefaultTypeInternal _CenterLoginServerCreateAuth_default_instance_;
constexpr CenterLoginClientCheckAuth::CenterLoginClientCheckAuth(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : auth_(int64_t{0})
  , accountid_(int64_t{0})
  , characterid_(int64_t{0}){}
struct CenterLoginClientCheckAuthDefaultTypeInternal {
  constexpr CenterLoginClientCheckAuthDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CenterLoginClientCheckAuthDefaultTypeInternal() {}
  union {
    CenterLoginClientCheckAuth _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CenterLoginClientCheckAuthDefaultTypeInternal _CenterLoginClientCheckAuth_default_instance_;
constexpr CenterLoginServerCheckAuth::CenterLoginServerCheckAuth(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct CenterLoginServerCheckAuthDefaultTypeInternal {
  constexpr CenterLoginServerCheckAuthDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CenterLoginServerCheckAuthDefaultTypeInternal() {}
  union {
    CenterLoginServerCheckAuth _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CenterLoginServerCheckAuthDefaultTypeInternal _CenterLoginServerCheckAuth_default_instance_;
}  // namespace Protocol
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_center_5flogin_5fprotocol_2eproto[6];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_center_5flogin_5fprotocol_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_center_5flogin_5fprotocol_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_center_5flogin_5fprotocol_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::CenterLoginClientInit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::CenterLoginClientInit, authenticationkey_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::CenterLoginServerInit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::CenterLoginClientCreateAuth, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::CenterLoginServerCreateAuth, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::CenterLoginServerCreateAuth, auth_),
  PROTOBUF_FIELD_OFFSET(::Protocol::CenterLoginServerCreateAuth, accountid_),
  PROTOBUF_FIELD_OFFSET(::Protocol::CenterLoginServerCreateAuth, characterid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::CenterLoginClientCheckAuth, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::CenterLoginClientCheckAuth, auth_),
  PROTOBUF_FIELD_OFFSET(::Protocol::CenterLoginClientCheckAuth, accountid_),
  PROTOBUF_FIELD_OFFSET(::Protocol::CenterLoginClientCheckAuth, characterid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::CenterLoginServerCheckAuth, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Protocol::CenterLoginClientInit)},
  { 6, -1, sizeof(::Protocol::CenterLoginServerInit)},
  { 11, -1, sizeof(::Protocol::CenterLoginClientCreateAuth)},
  { 16, -1, sizeof(::Protocol::CenterLoginServerCreateAuth)},
  { 24, -1, sizeof(::Protocol::CenterLoginClientCheckAuth)},
  { 32, -1, sizeof(::Protocol::CenterLoginServerCheckAuth)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_CenterLoginClientInit_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_CenterLoginServerInit_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_CenterLoginClientCreateAuth_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_CenterLoginServerCreateAuth_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_CenterLoginClientCheckAuth_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_CenterLoginServerCheckAuth_default_instance_),
};

const char descriptor_table_protodef_center_5flogin_5fprotocol_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\033center_login_protocol.proto\022\010Protocol\032"
  "\027center_login_enum.proto\032\031center_login_s"
  "truct.proto\"2\n\025CenterLoginClientInit\022\031\n\021"
  "AuthenticationKey\030\001 \001(\003\"\027\n\025CenterLoginSe"
  "rverInit\"\035\n\033CenterLoginClientCreateAuth\""
  "S\n\033CenterLoginServerCreateAuth\022\014\n\004auth\030\001"
  " \001(\003\022\021\n\taccountId\030\002 \001(\003\022\023\n\013characterId\030\003"
  " \001(\003\"R\n\032CenterLoginClientCheckAuth\022\014\n\004au"
  "th\030\001 \001(\003\022\021\n\taccountId\030\002 \001(\003\022\023\n\013character"
  "Id\030\003 \001(\003\"\034\n\032CenterLoginServerCheckAuthb\006"
  "proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_center_5flogin_5fprotocol_2eproto_deps[2] = {
  &::descriptor_table_center_5flogin_5fenum_2eproto,
  &::descriptor_table_center_5flogin_5fstruct_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_center_5flogin_5fprotocol_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_center_5flogin_5fprotocol_2eproto = {
  false, false, 406, descriptor_table_protodef_center_5flogin_5fprotocol_2eproto, "center_login_protocol.proto", 
  &descriptor_table_center_5flogin_5fprotocol_2eproto_once, descriptor_table_center_5flogin_5fprotocol_2eproto_deps, 2, 6,
  schemas, file_default_instances, TableStruct_center_5flogin_5fprotocol_2eproto::offsets,
  file_level_metadata_center_5flogin_5fprotocol_2eproto, file_level_enum_descriptors_center_5flogin_5fprotocol_2eproto, file_level_service_descriptors_center_5flogin_5fprotocol_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_center_5flogin_5fprotocol_2eproto_getter() {
  return &descriptor_table_center_5flogin_5fprotocol_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_center_5flogin_5fprotocol_2eproto(&descriptor_table_center_5flogin_5fprotocol_2eproto);
namespace Protocol {

// ===================================================================

class CenterLoginClientInit::_Internal {
 public:
};

CenterLoginClientInit::CenterLoginClientInit(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Protocol.CenterLoginClientInit)
}
CenterLoginClientInit::CenterLoginClientInit(const CenterLoginClientInit& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  authenticationkey_ = from.authenticationkey_;
  // @@protoc_insertion_point(copy_constructor:Protocol.CenterLoginClientInit)
}

void CenterLoginClientInit::SharedCtor() {
authenticationkey_ = int64_t{0};
}

CenterLoginClientInit::~CenterLoginClientInit() {
  // @@protoc_insertion_point(destructor:Protocol.CenterLoginClientInit)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CenterLoginClientInit::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CenterLoginClientInit::ArenaDtor(void* object) {
  CenterLoginClientInit* _this = reinterpret_cast< CenterLoginClientInit* >(object);
  (void)_this;
}
void CenterLoginClientInit::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CenterLoginClientInit::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CenterLoginClientInit::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.CenterLoginClientInit)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  authenticationkey_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CenterLoginClientInit::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 AuthenticationKey = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          authenticationkey_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CenterLoginClientInit::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.CenterLoginClientInit)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 AuthenticationKey = 1;
  if (this->authenticationkey() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_authenticationkey(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.CenterLoginClientInit)
  return target;
}

size_t CenterLoginClientInit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.CenterLoginClientInit)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 AuthenticationKey = 1;
  if (this->authenticationkey() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_authenticationkey());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CenterLoginClientInit::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.CenterLoginClientInit)
  GOOGLE_DCHECK_NE(&from, this);
  const CenterLoginClientInit* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CenterLoginClientInit>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.CenterLoginClientInit)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.CenterLoginClientInit)
    MergeFrom(*source);
  }
}

void CenterLoginClientInit::MergeFrom(const CenterLoginClientInit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.CenterLoginClientInit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.authenticationkey() != 0) {
    _internal_set_authenticationkey(from._internal_authenticationkey());
  }
}

void CenterLoginClientInit::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.CenterLoginClientInit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CenterLoginClientInit::CopyFrom(const CenterLoginClientInit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.CenterLoginClientInit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CenterLoginClientInit::IsInitialized() const {
  return true;
}

void CenterLoginClientInit::InternalSwap(CenterLoginClientInit* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(authenticationkey_, other->authenticationkey_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CenterLoginClientInit::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_center_5flogin_5fprotocol_2eproto_getter, &descriptor_table_center_5flogin_5fprotocol_2eproto_once,
      file_level_metadata_center_5flogin_5fprotocol_2eproto[0]);
}

// ===================================================================

class CenterLoginServerInit::_Internal {
 public:
};

CenterLoginServerInit::CenterLoginServerInit(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Protocol.CenterLoginServerInit)
}
CenterLoginServerInit::CenterLoginServerInit(const CenterLoginServerInit& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.CenterLoginServerInit)
}

void CenterLoginServerInit::SharedCtor() {
}

CenterLoginServerInit::~CenterLoginServerInit() {
  // @@protoc_insertion_point(destructor:Protocol.CenterLoginServerInit)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CenterLoginServerInit::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CenterLoginServerInit::ArenaDtor(void* object) {
  CenterLoginServerInit* _this = reinterpret_cast< CenterLoginServerInit* >(object);
  (void)_this;
}
void CenterLoginServerInit::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CenterLoginServerInit::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CenterLoginServerInit::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.CenterLoginServerInit)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CenterLoginServerInit::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CenterLoginServerInit::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.CenterLoginServerInit)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.CenterLoginServerInit)
  return target;
}

size_t CenterLoginServerInit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.CenterLoginServerInit)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CenterLoginServerInit::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.CenterLoginServerInit)
  GOOGLE_DCHECK_NE(&from, this);
  const CenterLoginServerInit* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CenterLoginServerInit>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.CenterLoginServerInit)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.CenterLoginServerInit)
    MergeFrom(*source);
  }
}

void CenterLoginServerInit::MergeFrom(const CenterLoginServerInit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.CenterLoginServerInit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CenterLoginServerInit::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.CenterLoginServerInit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CenterLoginServerInit::CopyFrom(const CenterLoginServerInit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.CenterLoginServerInit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CenterLoginServerInit::IsInitialized() const {
  return true;
}

void CenterLoginServerInit::InternalSwap(CenterLoginServerInit* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CenterLoginServerInit::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_center_5flogin_5fprotocol_2eproto_getter, &descriptor_table_center_5flogin_5fprotocol_2eproto_once,
      file_level_metadata_center_5flogin_5fprotocol_2eproto[1]);
}

// ===================================================================

class CenterLoginClientCreateAuth::_Internal {
 public:
};

CenterLoginClientCreateAuth::CenterLoginClientCreateAuth(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Protocol.CenterLoginClientCreateAuth)
}
CenterLoginClientCreateAuth::CenterLoginClientCreateAuth(const CenterLoginClientCreateAuth& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.CenterLoginClientCreateAuth)
}

void CenterLoginClientCreateAuth::SharedCtor() {
}

CenterLoginClientCreateAuth::~CenterLoginClientCreateAuth() {
  // @@protoc_insertion_point(destructor:Protocol.CenterLoginClientCreateAuth)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CenterLoginClientCreateAuth::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CenterLoginClientCreateAuth::ArenaDtor(void* object) {
  CenterLoginClientCreateAuth* _this = reinterpret_cast< CenterLoginClientCreateAuth* >(object);
  (void)_this;
}
void CenterLoginClientCreateAuth::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CenterLoginClientCreateAuth::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CenterLoginClientCreateAuth::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.CenterLoginClientCreateAuth)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CenterLoginClientCreateAuth::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CenterLoginClientCreateAuth::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.CenterLoginClientCreateAuth)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.CenterLoginClientCreateAuth)
  return target;
}

size_t CenterLoginClientCreateAuth::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.CenterLoginClientCreateAuth)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CenterLoginClientCreateAuth::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.CenterLoginClientCreateAuth)
  GOOGLE_DCHECK_NE(&from, this);
  const CenterLoginClientCreateAuth* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CenterLoginClientCreateAuth>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.CenterLoginClientCreateAuth)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.CenterLoginClientCreateAuth)
    MergeFrom(*source);
  }
}

void CenterLoginClientCreateAuth::MergeFrom(const CenterLoginClientCreateAuth& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.CenterLoginClientCreateAuth)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CenterLoginClientCreateAuth::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.CenterLoginClientCreateAuth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CenterLoginClientCreateAuth::CopyFrom(const CenterLoginClientCreateAuth& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.CenterLoginClientCreateAuth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CenterLoginClientCreateAuth::IsInitialized() const {
  return true;
}

void CenterLoginClientCreateAuth::InternalSwap(CenterLoginClientCreateAuth* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CenterLoginClientCreateAuth::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_center_5flogin_5fprotocol_2eproto_getter, &descriptor_table_center_5flogin_5fprotocol_2eproto_once,
      file_level_metadata_center_5flogin_5fprotocol_2eproto[2]);
}

// ===================================================================

class CenterLoginServerCreateAuth::_Internal {
 public:
};

CenterLoginServerCreateAuth::CenterLoginServerCreateAuth(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Protocol.CenterLoginServerCreateAuth)
}
CenterLoginServerCreateAuth::CenterLoginServerCreateAuth(const CenterLoginServerCreateAuth& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&auth_, &from.auth_,
    static_cast<size_t>(reinterpret_cast<char*>(&characterid_) -
    reinterpret_cast<char*>(&auth_)) + sizeof(characterid_));
  // @@protoc_insertion_point(copy_constructor:Protocol.CenterLoginServerCreateAuth)
}

void CenterLoginServerCreateAuth::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&auth_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&characterid_) -
    reinterpret_cast<char*>(&auth_)) + sizeof(characterid_));
}

CenterLoginServerCreateAuth::~CenterLoginServerCreateAuth() {
  // @@protoc_insertion_point(destructor:Protocol.CenterLoginServerCreateAuth)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CenterLoginServerCreateAuth::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CenterLoginServerCreateAuth::ArenaDtor(void* object) {
  CenterLoginServerCreateAuth* _this = reinterpret_cast< CenterLoginServerCreateAuth* >(object);
  (void)_this;
}
void CenterLoginServerCreateAuth::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CenterLoginServerCreateAuth::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CenterLoginServerCreateAuth::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.CenterLoginServerCreateAuth)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&auth_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&characterid_) -
      reinterpret_cast<char*>(&auth_)) + sizeof(characterid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CenterLoginServerCreateAuth::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 auth = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          auth_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 accountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          accountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 characterId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          characterid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CenterLoginServerCreateAuth::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.CenterLoginServerCreateAuth)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 auth = 1;
  if (this->auth() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_auth(), target);
  }

  // int64 accountId = 2;
  if (this->accountid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_accountid(), target);
  }

  // int64 characterId = 3;
  if (this->characterid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_characterid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.CenterLoginServerCreateAuth)
  return target;
}

size_t CenterLoginServerCreateAuth::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.CenterLoginServerCreateAuth)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 auth = 1;
  if (this->auth() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_auth());
  }

  // int64 accountId = 2;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_accountid());
  }

  // int64 characterId = 3;
  if (this->characterid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_characterid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CenterLoginServerCreateAuth::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.CenterLoginServerCreateAuth)
  GOOGLE_DCHECK_NE(&from, this);
  const CenterLoginServerCreateAuth* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CenterLoginServerCreateAuth>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.CenterLoginServerCreateAuth)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.CenterLoginServerCreateAuth)
    MergeFrom(*source);
  }
}

void CenterLoginServerCreateAuth::MergeFrom(const CenterLoginServerCreateAuth& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.CenterLoginServerCreateAuth)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.auth() != 0) {
    _internal_set_auth(from._internal_auth());
  }
  if (from.accountid() != 0) {
    _internal_set_accountid(from._internal_accountid());
  }
  if (from.characterid() != 0) {
    _internal_set_characterid(from._internal_characterid());
  }
}

void CenterLoginServerCreateAuth::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.CenterLoginServerCreateAuth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CenterLoginServerCreateAuth::CopyFrom(const CenterLoginServerCreateAuth& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.CenterLoginServerCreateAuth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CenterLoginServerCreateAuth::IsInitialized() const {
  return true;
}

void CenterLoginServerCreateAuth::InternalSwap(CenterLoginServerCreateAuth* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CenterLoginServerCreateAuth, characterid_)
      + sizeof(CenterLoginServerCreateAuth::characterid_)
      - PROTOBUF_FIELD_OFFSET(CenterLoginServerCreateAuth, auth_)>(
          reinterpret_cast<char*>(&auth_),
          reinterpret_cast<char*>(&other->auth_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CenterLoginServerCreateAuth::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_center_5flogin_5fprotocol_2eproto_getter, &descriptor_table_center_5flogin_5fprotocol_2eproto_once,
      file_level_metadata_center_5flogin_5fprotocol_2eproto[3]);
}

// ===================================================================

class CenterLoginClientCheckAuth::_Internal {
 public:
};

CenterLoginClientCheckAuth::CenterLoginClientCheckAuth(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Protocol.CenterLoginClientCheckAuth)
}
CenterLoginClientCheckAuth::CenterLoginClientCheckAuth(const CenterLoginClientCheckAuth& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&auth_, &from.auth_,
    static_cast<size_t>(reinterpret_cast<char*>(&characterid_) -
    reinterpret_cast<char*>(&auth_)) + sizeof(characterid_));
  // @@protoc_insertion_point(copy_constructor:Protocol.CenterLoginClientCheckAuth)
}

void CenterLoginClientCheckAuth::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&auth_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&characterid_) -
    reinterpret_cast<char*>(&auth_)) + sizeof(characterid_));
}

CenterLoginClientCheckAuth::~CenterLoginClientCheckAuth() {
  // @@protoc_insertion_point(destructor:Protocol.CenterLoginClientCheckAuth)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CenterLoginClientCheckAuth::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CenterLoginClientCheckAuth::ArenaDtor(void* object) {
  CenterLoginClientCheckAuth* _this = reinterpret_cast< CenterLoginClientCheckAuth* >(object);
  (void)_this;
}
void CenterLoginClientCheckAuth::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CenterLoginClientCheckAuth::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CenterLoginClientCheckAuth::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.CenterLoginClientCheckAuth)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&auth_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&characterid_) -
      reinterpret_cast<char*>(&auth_)) + sizeof(characterid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CenterLoginClientCheckAuth::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 auth = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          auth_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 accountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          accountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 characterId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          characterid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CenterLoginClientCheckAuth::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.CenterLoginClientCheckAuth)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 auth = 1;
  if (this->auth() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_auth(), target);
  }

  // int64 accountId = 2;
  if (this->accountid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_accountid(), target);
  }

  // int64 characterId = 3;
  if (this->characterid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_characterid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.CenterLoginClientCheckAuth)
  return target;
}

size_t CenterLoginClientCheckAuth::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.CenterLoginClientCheckAuth)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 auth = 1;
  if (this->auth() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_auth());
  }

  // int64 accountId = 2;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_accountid());
  }

  // int64 characterId = 3;
  if (this->characterid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_characterid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CenterLoginClientCheckAuth::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.CenterLoginClientCheckAuth)
  GOOGLE_DCHECK_NE(&from, this);
  const CenterLoginClientCheckAuth* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CenterLoginClientCheckAuth>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.CenterLoginClientCheckAuth)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.CenterLoginClientCheckAuth)
    MergeFrom(*source);
  }
}

void CenterLoginClientCheckAuth::MergeFrom(const CenterLoginClientCheckAuth& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.CenterLoginClientCheckAuth)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.auth() != 0) {
    _internal_set_auth(from._internal_auth());
  }
  if (from.accountid() != 0) {
    _internal_set_accountid(from._internal_accountid());
  }
  if (from.characterid() != 0) {
    _internal_set_characterid(from._internal_characterid());
  }
}

void CenterLoginClientCheckAuth::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.CenterLoginClientCheckAuth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CenterLoginClientCheckAuth::CopyFrom(const CenterLoginClientCheckAuth& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.CenterLoginClientCheckAuth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CenterLoginClientCheckAuth::IsInitialized() const {
  return true;
}

void CenterLoginClientCheckAuth::InternalSwap(CenterLoginClientCheckAuth* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CenterLoginClientCheckAuth, characterid_)
      + sizeof(CenterLoginClientCheckAuth::characterid_)
      - PROTOBUF_FIELD_OFFSET(CenterLoginClientCheckAuth, auth_)>(
          reinterpret_cast<char*>(&auth_),
          reinterpret_cast<char*>(&other->auth_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CenterLoginClientCheckAuth::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_center_5flogin_5fprotocol_2eproto_getter, &descriptor_table_center_5flogin_5fprotocol_2eproto_once,
      file_level_metadata_center_5flogin_5fprotocol_2eproto[4]);
}

// ===================================================================

class CenterLoginServerCheckAuth::_Internal {
 public:
};

CenterLoginServerCheckAuth::CenterLoginServerCheckAuth(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Protocol.CenterLoginServerCheckAuth)
}
CenterLoginServerCheckAuth::CenterLoginServerCheckAuth(const CenterLoginServerCheckAuth& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.CenterLoginServerCheckAuth)
}

void CenterLoginServerCheckAuth::SharedCtor() {
}

CenterLoginServerCheckAuth::~CenterLoginServerCheckAuth() {
  // @@protoc_insertion_point(destructor:Protocol.CenterLoginServerCheckAuth)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CenterLoginServerCheckAuth::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CenterLoginServerCheckAuth::ArenaDtor(void* object) {
  CenterLoginServerCheckAuth* _this = reinterpret_cast< CenterLoginServerCheckAuth* >(object);
  (void)_this;
}
void CenterLoginServerCheckAuth::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CenterLoginServerCheckAuth::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CenterLoginServerCheckAuth::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.CenterLoginServerCheckAuth)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CenterLoginServerCheckAuth::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CenterLoginServerCheckAuth::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.CenterLoginServerCheckAuth)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.CenterLoginServerCheckAuth)
  return target;
}

size_t CenterLoginServerCheckAuth::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.CenterLoginServerCheckAuth)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CenterLoginServerCheckAuth::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.CenterLoginServerCheckAuth)
  GOOGLE_DCHECK_NE(&from, this);
  const CenterLoginServerCheckAuth* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CenterLoginServerCheckAuth>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.CenterLoginServerCheckAuth)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.CenterLoginServerCheckAuth)
    MergeFrom(*source);
  }
}

void CenterLoginServerCheckAuth::MergeFrom(const CenterLoginServerCheckAuth& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.CenterLoginServerCheckAuth)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CenterLoginServerCheckAuth::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.CenterLoginServerCheckAuth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CenterLoginServerCheckAuth::CopyFrom(const CenterLoginServerCheckAuth& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.CenterLoginServerCheckAuth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CenterLoginServerCheckAuth::IsInitialized() const {
  return true;
}

void CenterLoginServerCheckAuth::InternalSwap(CenterLoginServerCheckAuth* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CenterLoginServerCheckAuth::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_center_5flogin_5fprotocol_2eproto_getter, &descriptor_table_center_5flogin_5fprotocol_2eproto_once,
      file_level_metadata_center_5flogin_5fprotocol_2eproto[5]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace Protocol
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::Protocol::CenterLoginClientInit* Arena::CreateMaybeMessage< ::Protocol::CenterLoginClientInit >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::CenterLoginClientInit >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::CenterLoginServerInit* Arena::CreateMaybeMessage< ::Protocol::CenterLoginServerInit >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::CenterLoginServerInit >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::CenterLoginClientCreateAuth* Arena::CreateMaybeMessage< ::Protocol::CenterLoginClientCreateAuth >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::CenterLoginClientCreateAuth >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::CenterLoginServerCreateAuth* Arena::CreateMaybeMessage< ::Protocol::CenterLoginServerCreateAuth >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::CenterLoginServerCreateAuth >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::CenterLoginClientCheckAuth* Arena::CreateMaybeMessage< ::Protocol::CenterLoginClientCheckAuth >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::CenterLoginClientCheckAuth >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::CenterLoginServerCheckAuth* Arena::CreateMaybeMessage< ::Protocol::CenterLoginServerCheckAuth >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::CenterLoginServerCheckAuth >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
