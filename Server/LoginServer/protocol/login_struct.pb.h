// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: login_struct.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_login_5fstruct_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_login_5fstruct_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3017000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3017001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "login_enum.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_login_5fstruct_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_login_5fstruct_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_login_5fstruct_2eproto;
namespace Protocol {
class ViewCharacter;
struct ViewCharacterDefaultTypeInternal;
extern ViewCharacterDefaultTypeInternal _ViewCharacter_default_instance_;
}  // namespace Protocol
PROTOBUF_NAMESPACE_OPEN
template<> ::Protocol::ViewCharacter* Arena::CreateMaybeMessage<::Protocol::ViewCharacter>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace Protocol {

// ===================================================================

class ViewCharacter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Protocol.ViewCharacter) */ {
 public:
  inline ViewCharacter() : ViewCharacter(nullptr) {}
  ~ViewCharacter() override;
  explicit constexpr ViewCharacter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ViewCharacter(const ViewCharacter& from);
  ViewCharacter(ViewCharacter&& from) noexcept
    : ViewCharacter() {
    *this = ::std::move(from);
  }

  inline ViewCharacter& operator=(const ViewCharacter& from) {
    CopyFrom(from);
    return *this;
  }
  inline ViewCharacter& operator=(ViewCharacter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ViewCharacter& default_instance() {
    return *internal_default_instance();
  }
  static inline const ViewCharacter* internal_default_instance() {
    return reinterpret_cast<const ViewCharacter*>(
               &_ViewCharacter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ViewCharacter& a, ViewCharacter& b) {
    a.Swap(&b);
  }
  inline void Swap(ViewCharacter* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ViewCharacter* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ViewCharacter* New() const final {
    return new ViewCharacter();
  }

  ViewCharacter* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ViewCharacter>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ViewCharacter& from);
  void MergeFrom(const ViewCharacter& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ViewCharacter* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Protocol.ViewCharacter";
  }
  protected:
  explicit ViewCharacter(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEqpItemsFieldNumber = 3,
    kNameFieldNumber = 1,
    kGenderFieldNumber = 2,
  };
  // repeated int32 eqp_items = 3;
  int eqp_items_size() const;
  private:
  int _internal_eqp_items_size() const;
  public:
  void clear_eqp_items();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_eqp_items(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_eqp_items() const;
  void _internal_add_eqp_items(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_eqp_items();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 eqp_items(int index) const;
  void set_eqp_items(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_eqp_items(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      eqp_items() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_eqp_items();

  // bytes name = 1;
  void clear_name();
  const std::string& name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_name();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // bool gender = 2;
  void clear_gender();
  bool gender() const;
  void set_gender(bool value);
  private:
  bool _internal_gender() const;
  void _internal_set_gender(bool value);
  public:

  // @@protoc_insertion_point(class_scope:Protocol.ViewCharacter)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > eqp_items_;
  mutable std::atomic<int> _eqp_items_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  bool gender_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_login_5fstruct_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ViewCharacter

// bytes name = 1;
inline void ViewCharacter::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& ViewCharacter::name() const {
  // @@protoc_insertion_point(field_get:Protocol.ViewCharacter.name)
  return _internal_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ViewCharacter::set_name(ArgT0&& arg0, ArgT... args) {
 
 name_.SetBytes(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Protocol.ViewCharacter.name)
}
inline std::string* ViewCharacter::mutable_name() {
  // @@protoc_insertion_point(field_mutable:Protocol.ViewCharacter.name)
  return _internal_mutable_name();
}
inline const std::string& ViewCharacter::_internal_name() const {
  return name_.Get();
}
inline void ViewCharacter::_internal_set_name(const std::string& value) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* ViewCharacter::_internal_mutable_name() {
  
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* ViewCharacter::release_name() {
  // @@protoc_insertion_point(field_release:Protocol.ViewCharacter.name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void ViewCharacter::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:Protocol.ViewCharacter.name)
}

// bool gender = 2;
inline void ViewCharacter::clear_gender() {
  gender_ = false;
}
inline bool ViewCharacter::_internal_gender() const {
  return gender_;
}
inline bool ViewCharacter::gender() const {
  // @@protoc_insertion_point(field_get:Protocol.ViewCharacter.gender)
  return _internal_gender();
}
inline void ViewCharacter::_internal_set_gender(bool value) {
  
  gender_ = value;
}
inline void ViewCharacter::set_gender(bool value) {
  _internal_set_gender(value);
  // @@protoc_insertion_point(field_set:Protocol.ViewCharacter.gender)
}

// repeated int32 eqp_items = 3;
inline int ViewCharacter::_internal_eqp_items_size() const {
  return eqp_items_.size();
}
inline int ViewCharacter::eqp_items_size() const {
  return _internal_eqp_items_size();
}
inline void ViewCharacter::clear_eqp_items() {
  eqp_items_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ViewCharacter::_internal_eqp_items(int index) const {
  return eqp_items_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ViewCharacter::eqp_items(int index) const {
  // @@protoc_insertion_point(field_get:Protocol.ViewCharacter.eqp_items)
  return _internal_eqp_items(index);
}
inline void ViewCharacter::set_eqp_items(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  eqp_items_.Set(index, value);
  // @@protoc_insertion_point(field_set:Protocol.ViewCharacter.eqp_items)
}
inline void ViewCharacter::_internal_add_eqp_items(::PROTOBUF_NAMESPACE_ID::int32 value) {
  eqp_items_.Add(value);
}
inline void ViewCharacter::add_eqp_items(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_eqp_items(value);
  // @@protoc_insertion_point(field_add:Protocol.ViewCharacter.eqp_items)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
ViewCharacter::_internal_eqp_items() const {
  return eqp_items_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
ViewCharacter::eqp_items() const {
  // @@protoc_insertion_point(field_list:Protocol.ViewCharacter.eqp_items)
  return _internal_eqp_items();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
ViewCharacter::_internal_mutable_eqp_items() {
  return &eqp_items_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
ViewCharacter::mutable_eqp_items() {
  // @@protoc_insertion_point(field_mutable_list:Protocol.ViewCharacter.eqp_items)
  return _internal_mutable_eqp_items();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace Protocol

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_login_5fstruct_2eproto
