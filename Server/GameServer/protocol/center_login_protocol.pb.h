// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: center_login_protocol.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_center_5flogin_5fprotocol_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_center_5flogin_5fprotocol_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3017000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3017001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "center_login_enum.pb.h"
#include "center_login_struct.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_center_5flogin_5fprotocol_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_center_5flogin_5fprotocol_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[6]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_center_5flogin_5fprotocol_2eproto;
namespace Protocol {
class CenterLoginClientCheckAuth;
struct CenterLoginClientCheckAuthDefaultTypeInternal;
extern CenterLoginClientCheckAuthDefaultTypeInternal _CenterLoginClientCheckAuth_default_instance_;
class CenterLoginClientCreateAuth;
struct CenterLoginClientCreateAuthDefaultTypeInternal;
extern CenterLoginClientCreateAuthDefaultTypeInternal _CenterLoginClientCreateAuth_default_instance_;
class CenterLoginClientInit;
struct CenterLoginClientInitDefaultTypeInternal;
extern CenterLoginClientInitDefaultTypeInternal _CenterLoginClientInit_default_instance_;
class CenterLoginServerCheckAuth;
struct CenterLoginServerCheckAuthDefaultTypeInternal;
extern CenterLoginServerCheckAuthDefaultTypeInternal _CenterLoginServerCheckAuth_default_instance_;
class CenterLoginServerCreateAuth;
struct CenterLoginServerCreateAuthDefaultTypeInternal;
extern CenterLoginServerCreateAuthDefaultTypeInternal _CenterLoginServerCreateAuth_default_instance_;
class CenterLoginServerInit;
struct CenterLoginServerInitDefaultTypeInternal;
extern CenterLoginServerInitDefaultTypeInternal _CenterLoginServerInit_default_instance_;
}  // namespace Protocol
PROTOBUF_NAMESPACE_OPEN
template<> ::Protocol::CenterLoginClientCheckAuth* Arena::CreateMaybeMessage<::Protocol::CenterLoginClientCheckAuth>(Arena*);
template<> ::Protocol::CenterLoginClientCreateAuth* Arena::CreateMaybeMessage<::Protocol::CenterLoginClientCreateAuth>(Arena*);
template<> ::Protocol::CenterLoginClientInit* Arena::CreateMaybeMessage<::Protocol::CenterLoginClientInit>(Arena*);
template<> ::Protocol::CenterLoginServerCheckAuth* Arena::CreateMaybeMessage<::Protocol::CenterLoginServerCheckAuth>(Arena*);
template<> ::Protocol::CenterLoginServerCreateAuth* Arena::CreateMaybeMessage<::Protocol::CenterLoginServerCreateAuth>(Arena*);
template<> ::Protocol::CenterLoginServerInit* Arena::CreateMaybeMessage<::Protocol::CenterLoginServerInit>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace Protocol {

// ===================================================================

class CenterLoginClientInit final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Protocol.CenterLoginClientInit) */ {
 public:
  inline CenterLoginClientInit() : CenterLoginClientInit(nullptr) {}
  ~CenterLoginClientInit() override;
  explicit constexpr CenterLoginClientInit(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CenterLoginClientInit(const CenterLoginClientInit& from);
  CenterLoginClientInit(CenterLoginClientInit&& from) noexcept
    : CenterLoginClientInit() {
    *this = ::std::move(from);
  }

  inline CenterLoginClientInit& operator=(const CenterLoginClientInit& from) {
    CopyFrom(from);
    return *this;
  }
  inline CenterLoginClientInit& operator=(CenterLoginClientInit&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CenterLoginClientInit& default_instance() {
    return *internal_default_instance();
  }
  static inline const CenterLoginClientInit* internal_default_instance() {
    return reinterpret_cast<const CenterLoginClientInit*>(
               &_CenterLoginClientInit_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CenterLoginClientInit& a, CenterLoginClientInit& b) {
    a.Swap(&b);
  }
  inline void Swap(CenterLoginClientInit* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CenterLoginClientInit* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CenterLoginClientInit* New() const final {
    return new CenterLoginClientInit();
  }

  CenterLoginClientInit* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CenterLoginClientInit>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CenterLoginClientInit& from);
  void MergeFrom(const CenterLoginClientInit& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CenterLoginClientInit* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Protocol.CenterLoginClientInit";
  }
  protected:
  explicit CenterLoginClientInit(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAuthenticationKeyFieldNumber = 1,
  };
  // int64 AuthenticationKey = 1;
  void clear_authenticationkey();
  ::PROTOBUF_NAMESPACE_ID::int64 authenticationkey() const;
  void set_authenticationkey(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_authenticationkey() const;
  void _internal_set_authenticationkey(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:Protocol.CenterLoginClientInit)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int64 authenticationkey_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_center_5flogin_5fprotocol_2eproto;
};
// -------------------------------------------------------------------

class CenterLoginServerInit final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Protocol.CenterLoginServerInit) */ {
 public:
  inline CenterLoginServerInit() : CenterLoginServerInit(nullptr) {}
  ~CenterLoginServerInit() override;
  explicit constexpr CenterLoginServerInit(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CenterLoginServerInit(const CenterLoginServerInit& from);
  CenterLoginServerInit(CenterLoginServerInit&& from) noexcept
    : CenterLoginServerInit() {
    *this = ::std::move(from);
  }

  inline CenterLoginServerInit& operator=(const CenterLoginServerInit& from) {
    CopyFrom(from);
    return *this;
  }
  inline CenterLoginServerInit& operator=(CenterLoginServerInit&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CenterLoginServerInit& default_instance() {
    return *internal_default_instance();
  }
  static inline const CenterLoginServerInit* internal_default_instance() {
    return reinterpret_cast<const CenterLoginServerInit*>(
               &_CenterLoginServerInit_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(CenterLoginServerInit& a, CenterLoginServerInit& b) {
    a.Swap(&b);
  }
  inline void Swap(CenterLoginServerInit* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CenterLoginServerInit* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CenterLoginServerInit* New() const final {
    return new CenterLoginServerInit();
  }

  CenterLoginServerInit* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CenterLoginServerInit>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CenterLoginServerInit& from);
  void MergeFrom(const CenterLoginServerInit& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CenterLoginServerInit* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Protocol.CenterLoginServerInit";
  }
  protected:
  explicit CenterLoginServerInit(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Protocol.CenterLoginServerInit)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_center_5flogin_5fprotocol_2eproto;
};
// -------------------------------------------------------------------

class CenterLoginClientCreateAuth final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Protocol.CenterLoginClientCreateAuth) */ {
 public:
  inline CenterLoginClientCreateAuth() : CenterLoginClientCreateAuth(nullptr) {}
  ~CenterLoginClientCreateAuth() override;
  explicit constexpr CenterLoginClientCreateAuth(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CenterLoginClientCreateAuth(const CenterLoginClientCreateAuth& from);
  CenterLoginClientCreateAuth(CenterLoginClientCreateAuth&& from) noexcept
    : CenterLoginClientCreateAuth() {
    *this = ::std::move(from);
  }

  inline CenterLoginClientCreateAuth& operator=(const CenterLoginClientCreateAuth& from) {
    CopyFrom(from);
    return *this;
  }
  inline CenterLoginClientCreateAuth& operator=(CenterLoginClientCreateAuth&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CenterLoginClientCreateAuth& default_instance() {
    return *internal_default_instance();
  }
  static inline const CenterLoginClientCreateAuth* internal_default_instance() {
    return reinterpret_cast<const CenterLoginClientCreateAuth*>(
               &_CenterLoginClientCreateAuth_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(CenterLoginClientCreateAuth& a, CenterLoginClientCreateAuth& b) {
    a.Swap(&b);
  }
  inline void Swap(CenterLoginClientCreateAuth* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CenterLoginClientCreateAuth* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CenterLoginClientCreateAuth* New() const final {
    return new CenterLoginClientCreateAuth();
  }

  CenterLoginClientCreateAuth* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CenterLoginClientCreateAuth>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CenterLoginClientCreateAuth& from);
  void MergeFrom(const CenterLoginClientCreateAuth& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CenterLoginClientCreateAuth* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Protocol.CenterLoginClientCreateAuth";
  }
  protected:
  explicit CenterLoginClientCreateAuth(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Protocol.CenterLoginClientCreateAuth)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_center_5flogin_5fprotocol_2eproto;
};
// -------------------------------------------------------------------

class CenterLoginServerCreateAuth final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Protocol.CenterLoginServerCreateAuth) */ {
 public:
  inline CenterLoginServerCreateAuth() : CenterLoginServerCreateAuth(nullptr) {}
  ~CenterLoginServerCreateAuth() override;
  explicit constexpr CenterLoginServerCreateAuth(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CenterLoginServerCreateAuth(const CenterLoginServerCreateAuth& from);
  CenterLoginServerCreateAuth(CenterLoginServerCreateAuth&& from) noexcept
    : CenterLoginServerCreateAuth() {
    *this = ::std::move(from);
  }

  inline CenterLoginServerCreateAuth& operator=(const CenterLoginServerCreateAuth& from) {
    CopyFrom(from);
    return *this;
  }
  inline CenterLoginServerCreateAuth& operator=(CenterLoginServerCreateAuth&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CenterLoginServerCreateAuth& default_instance() {
    return *internal_default_instance();
  }
  static inline const CenterLoginServerCreateAuth* internal_default_instance() {
    return reinterpret_cast<const CenterLoginServerCreateAuth*>(
               &_CenterLoginServerCreateAuth_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(CenterLoginServerCreateAuth& a, CenterLoginServerCreateAuth& b) {
    a.Swap(&b);
  }
  inline void Swap(CenterLoginServerCreateAuth* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CenterLoginServerCreateAuth* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CenterLoginServerCreateAuth* New() const final {
    return new CenterLoginServerCreateAuth();
  }

  CenterLoginServerCreateAuth* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CenterLoginServerCreateAuth>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CenterLoginServerCreateAuth& from);
  void MergeFrom(const CenterLoginServerCreateAuth& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CenterLoginServerCreateAuth* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Protocol.CenterLoginServerCreateAuth";
  }
  protected:
  explicit CenterLoginServerCreateAuth(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAuthFieldNumber = 1,
    kAccountIdFieldNumber = 2,
    kCharacterIdFieldNumber = 3,
  };
  // int64 auth = 1;
  void clear_auth();
  ::PROTOBUF_NAMESPACE_ID::int64 auth() const;
  void set_auth(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_auth() const;
  void _internal_set_auth(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 accountId = 2;
  void clear_accountid();
  ::PROTOBUF_NAMESPACE_ID::int64 accountid() const;
  void set_accountid(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_accountid() const;
  void _internal_set_accountid(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 characterId = 3;
  void clear_characterid();
  ::PROTOBUF_NAMESPACE_ID::int64 characterid() const;
  void set_characterid(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_characterid() const;
  void _internal_set_characterid(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:Protocol.CenterLoginServerCreateAuth)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int64 auth_;
  ::PROTOBUF_NAMESPACE_ID::int64 accountid_;
  ::PROTOBUF_NAMESPACE_ID::int64 characterid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_center_5flogin_5fprotocol_2eproto;
};
// -------------------------------------------------------------------

class CenterLoginClientCheckAuth final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Protocol.CenterLoginClientCheckAuth) */ {
 public:
  inline CenterLoginClientCheckAuth() : CenterLoginClientCheckAuth(nullptr) {}
  ~CenterLoginClientCheckAuth() override;
  explicit constexpr CenterLoginClientCheckAuth(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CenterLoginClientCheckAuth(const CenterLoginClientCheckAuth& from);
  CenterLoginClientCheckAuth(CenterLoginClientCheckAuth&& from) noexcept
    : CenterLoginClientCheckAuth() {
    *this = ::std::move(from);
  }

  inline CenterLoginClientCheckAuth& operator=(const CenterLoginClientCheckAuth& from) {
    CopyFrom(from);
    return *this;
  }
  inline CenterLoginClientCheckAuth& operator=(CenterLoginClientCheckAuth&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CenterLoginClientCheckAuth& default_instance() {
    return *internal_default_instance();
  }
  static inline const CenterLoginClientCheckAuth* internal_default_instance() {
    return reinterpret_cast<const CenterLoginClientCheckAuth*>(
               &_CenterLoginClientCheckAuth_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(CenterLoginClientCheckAuth& a, CenterLoginClientCheckAuth& b) {
    a.Swap(&b);
  }
  inline void Swap(CenterLoginClientCheckAuth* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CenterLoginClientCheckAuth* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CenterLoginClientCheckAuth* New() const final {
    return new CenterLoginClientCheckAuth();
  }

  CenterLoginClientCheckAuth* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CenterLoginClientCheckAuth>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CenterLoginClientCheckAuth& from);
  void MergeFrom(const CenterLoginClientCheckAuth& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CenterLoginClientCheckAuth* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Protocol.CenterLoginClientCheckAuth";
  }
  protected:
  explicit CenterLoginClientCheckAuth(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAuthFieldNumber = 1,
    kAccountIdFieldNumber = 2,
    kCharacterIdFieldNumber = 3,
  };
  // int64 auth = 1;
  void clear_auth();
  ::PROTOBUF_NAMESPACE_ID::int64 auth() const;
  void set_auth(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_auth() const;
  void _internal_set_auth(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 accountId = 2;
  void clear_accountid();
  ::PROTOBUF_NAMESPACE_ID::int64 accountid() const;
  void set_accountid(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_accountid() const;
  void _internal_set_accountid(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 characterId = 3;
  void clear_characterid();
  ::PROTOBUF_NAMESPACE_ID::int64 characterid() const;
  void set_characterid(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_characterid() const;
  void _internal_set_characterid(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:Protocol.CenterLoginClientCheckAuth)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int64 auth_;
  ::PROTOBUF_NAMESPACE_ID::int64 accountid_;
  ::PROTOBUF_NAMESPACE_ID::int64 characterid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_center_5flogin_5fprotocol_2eproto;
};
// -------------------------------------------------------------------

class CenterLoginServerCheckAuth final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Protocol.CenterLoginServerCheckAuth) */ {
 public:
  inline CenterLoginServerCheckAuth() : CenterLoginServerCheckAuth(nullptr) {}
  ~CenterLoginServerCheckAuth() override;
  explicit constexpr CenterLoginServerCheckAuth(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CenterLoginServerCheckAuth(const CenterLoginServerCheckAuth& from);
  CenterLoginServerCheckAuth(CenterLoginServerCheckAuth&& from) noexcept
    : CenterLoginServerCheckAuth() {
    *this = ::std::move(from);
  }

  inline CenterLoginServerCheckAuth& operator=(const CenterLoginServerCheckAuth& from) {
    CopyFrom(from);
    return *this;
  }
  inline CenterLoginServerCheckAuth& operator=(CenterLoginServerCheckAuth&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CenterLoginServerCheckAuth& default_instance() {
    return *internal_default_instance();
  }
  static inline const CenterLoginServerCheckAuth* internal_default_instance() {
    return reinterpret_cast<const CenterLoginServerCheckAuth*>(
               &_CenterLoginServerCheckAuth_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(CenterLoginServerCheckAuth& a, CenterLoginServerCheckAuth& b) {
    a.Swap(&b);
  }
  inline void Swap(CenterLoginServerCheckAuth* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CenterLoginServerCheckAuth* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CenterLoginServerCheckAuth* New() const final {
    return new CenterLoginServerCheckAuth();
  }

  CenterLoginServerCheckAuth* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CenterLoginServerCheckAuth>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CenterLoginServerCheckAuth& from);
  void MergeFrom(const CenterLoginServerCheckAuth& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CenterLoginServerCheckAuth* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Protocol.CenterLoginServerCheckAuth";
  }
  protected:
  explicit CenterLoginServerCheckAuth(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Protocol.CenterLoginServerCheckAuth)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_center_5flogin_5fprotocol_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CenterLoginClientInit

// int64 AuthenticationKey = 1;
inline void CenterLoginClientInit::clear_authenticationkey() {
  authenticationkey_ = int64_t{0};
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CenterLoginClientInit::_internal_authenticationkey() const {
  return authenticationkey_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CenterLoginClientInit::authenticationkey() const {
  // @@protoc_insertion_point(field_get:Protocol.CenterLoginClientInit.AuthenticationKey)
  return _internal_authenticationkey();
}
inline void CenterLoginClientInit::_internal_set_authenticationkey(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  authenticationkey_ = value;
}
inline void CenterLoginClientInit::set_authenticationkey(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_authenticationkey(value);
  // @@protoc_insertion_point(field_set:Protocol.CenterLoginClientInit.AuthenticationKey)
}

// -------------------------------------------------------------------

// CenterLoginServerInit

// -------------------------------------------------------------------

// CenterLoginClientCreateAuth

// -------------------------------------------------------------------

// CenterLoginServerCreateAuth

// int64 auth = 1;
inline void CenterLoginServerCreateAuth::clear_auth() {
  auth_ = int64_t{0};
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CenterLoginServerCreateAuth::_internal_auth() const {
  return auth_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CenterLoginServerCreateAuth::auth() const {
  // @@protoc_insertion_point(field_get:Protocol.CenterLoginServerCreateAuth.auth)
  return _internal_auth();
}
inline void CenterLoginServerCreateAuth::_internal_set_auth(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  auth_ = value;
}
inline void CenterLoginServerCreateAuth::set_auth(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_auth(value);
  // @@protoc_insertion_point(field_set:Protocol.CenterLoginServerCreateAuth.auth)
}

// int64 accountId = 2;
inline void CenterLoginServerCreateAuth::clear_accountid() {
  accountid_ = int64_t{0};
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CenterLoginServerCreateAuth::_internal_accountid() const {
  return accountid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CenterLoginServerCreateAuth::accountid() const {
  // @@protoc_insertion_point(field_get:Protocol.CenterLoginServerCreateAuth.accountId)
  return _internal_accountid();
}
inline void CenterLoginServerCreateAuth::_internal_set_accountid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  accountid_ = value;
}
inline void CenterLoginServerCreateAuth::set_accountid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_accountid(value);
  // @@protoc_insertion_point(field_set:Protocol.CenterLoginServerCreateAuth.accountId)
}

// int64 characterId = 3;
inline void CenterLoginServerCreateAuth::clear_characterid() {
  characterid_ = int64_t{0};
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CenterLoginServerCreateAuth::_internal_characterid() const {
  return characterid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CenterLoginServerCreateAuth::characterid() const {
  // @@protoc_insertion_point(field_get:Protocol.CenterLoginServerCreateAuth.characterId)
  return _internal_characterid();
}
inline void CenterLoginServerCreateAuth::_internal_set_characterid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  characterid_ = value;
}
inline void CenterLoginServerCreateAuth::set_characterid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_characterid(value);
  // @@protoc_insertion_point(field_set:Protocol.CenterLoginServerCreateAuth.characterId)
}

// -------------------------------------------------------------------

// CenterLoginClientCheckAuth

// int64 auth = 1;
inline void CenterLoginClientCheckAuth::clear_auth() {
  auth_ = int64_t{0};
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CenterLoginClientCheckAuth::_internal_auth() const {
  return auth_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CenterLoginClientCheckAuth::auth() const {
  // @@protoc_insertion_point(field_get:Protocol.CenterLoginClientCheckAuth.auth)
  return _internal_auth();
}
inline void CenterLoginClientCheckAuth::_internal_set_auth(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  auth_ = value;
}
inline void CenterLoginClientCheckAuth::set_auth(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_auth(value);
  // @@protoc_insertion_point(field_set:Protocol.CenterLoginClientCheckAuth.auth)
}

// int64 accountId = 2;
inline void CenterLoginClientCheckAuth::clear_accountid() {
  accountid_ = int64_t{0};
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CenterLoginClientCheckAuth::_internal_accountid() const {
  return accountid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CenterLoginClientCheckAuth::accountid() const {
  // @@protoc_insertion_point(field_get:Protocol.CenterLoginClientCheckAuth.accountId)
  return _internal_accountid();
}
inline void CenterLoginClientCheckAuth::_internal_set_accountid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  accountid_ = value;
}
inline void CenterLoginClientCheckAuth::set_accountid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_accountid(value);
  // @@protoc_insertion_point(field_set:Protocol.CenterLoginClientCheckAuth.accountId)
}

// int64 characterId = 3;
inline void CenterLoginClientCheckAuth::clear_characterid() {
  characterid_ = int64_t{0};
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CenterLoginClientCheckAuth::_internal_characterid() const {
  return characterid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CenterLoginClientCheckAuth::characterid() const {
  // @@protoc_insertion_point(field_get:Protocol.CenterLoginClientCheckAuth.characterId)
  return _internal_characterid();
}
inline void CenterLoginClientCheckAuth::_internal_set_characterid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  characterid_ = value;
}
inline void CenterLoginClientCheckAuth::set_characterid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_characterid(value);
  // @@protoc_insertion_point(field_set:Protocol.CenterLoginClientCheckAuth.characterId)
}

// -------------------------------------------------------------------

// CenterLoginServerCheckAuth

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Protocol

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_center_5flogin_5fprotocol_2eproto
