// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: game_enum.proto

#include "game_enum.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace Protocol {
}  // namespace Protocol
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_game_5fenum_2eproto[5];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_game_5fenum_2eproto = nullptr;
const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_game_5fenum_2eproto::offsets[1] = {};
static constexpr ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema* schemas = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_game_5fenum_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\017game_enum.proto\022\010Protocol*a\n\016kInventor"
  "yType\022\026\n\022kInventoryEquipped\020\000\022\021\n\rkInvent"
  "oryEqp\020\001\022\021\n\rkInventoryEtc\020\002\022\021\n\rkInventor"
  "yEnd\020\003*/\n\nkLoadState\022\020\n\014kLoadSuccess\020\000\022\017"
  "\n\013kLoadFailed\020\001*\216\002\n\rkMonsterState\022\n\n\006kId"
  "leA\020\000\022\n\n\006kWalkA\020\001\022\n\n\006kBoreA\020\002\022\013\n\007kRegenA"
  "\020\003\022\t\n\005kRunA\020\004\022\n\n\006kDeadA\020\005\022\n\n\006kDeadB\020\006\022\r\n"
  "\tkAttack1A\020\007\022\r\n\tkAttack2A\020\010\022\r\n\tkAttack3A"
  "\020\t\022\r\n\tkAttack1B\020\n\022\r\n\tkAttack2B\020\013\022\r\n\tkAtt"
  "ack3B\020\014\022\r\n\tkAttack1C\020\r\022\r\n\tkAttack2C\020\016\022\r\n"
  "\tkAttack3C\020\017\022\n\n\006kDamgA\020\020\022\n\n\006kDamgB\020\021\022\n\n\006"
  "kDamgC\020\022*-\n\017kPlayerStatType\022\007\n\003kHp\020\000\022\007\n\003"
  "kMp\020\001\022\010\n\004kExp\020\002*2\n\020kMonsterStatType\022\016\n\nk"
  "MonsterHp\020\000\022\016\n\nkMonsterMp\020\001b\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_game_5fenum_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_game_5fenum_2eproto = {
  false, false, 555, descriptor_table_protodef_game_5fenum_2eproto, "game_enum.proto", 
  &descriptor_table_game_5fenum_2eproto_once, nullptr, 0, 0,
  schemas, file_default_instances, TableStruct_game_5fenum_2eproto::offsets,
  nullptr, file_level_enum_descriptors_game_5fenum_2eproto, file_level_service_descriptors_game_5fenum_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_game_5fenum_2eproto_getter() {
  return &descriptor_table_game_5fenum_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_game_5fenum_2eproto(&descriptor_table_game_5fenum_2eproto);
namespace Protocol {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* kInventoryType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_game_5fenum_2eproto);
  return file_level_enum_descriptors_game_5fenum_2eproto[0];
}
bool kInventoryType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* kLoadState_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_game_5fenum_2eproto);
  return file_level_enum_descriptors_game_5fenum_2eproto[1];
}
bool kLoadState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* kMonsterState_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_game_5fenum_2eproto);
  return file_level_enum_descriptors_game_5fenum_2eproto[2];
}
bool kMonsterState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* kPlayerStatType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_game_5fenum_2eproto);
  return file_level_enum_descriptors_game_5fenum_2eproto[3];
}
bool kPlayerStatType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* kMonsterStatType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_game_5fenum_2eproto);
  return file_level_enum_descriptors_game_5fenum_2eproto[4];
}
bool kMonsterStatType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Protocol
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
